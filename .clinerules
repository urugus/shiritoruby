# タスクの進め方

- docs/roadmap.md を参照
- 未完了のタスクの中から、まとまりのある単位のタスクを選択する
- そのタスクのためのbranchに checkout し、タスクを開始する
  - 仕様が不明瞭な部分は勝手に補おうとせず、ユーザーに確認する
- タスクの中でも意味のある作業のまとまり単位で実装を進め、区切りのタイミングでcommitすること
  - commit の前に rubocop と rspec(テスト実装がある場合のみ) がパスすることを確認すること
  - タスクが完了するごとに、docs/roadmap.md のステータスを完了に更新していく
  - 今回完了したタスクから、これから実装する必要がある内容と、roadmap.md を比較し、roadmap.md に不足している内容があれば適宜追記すること
- 今回選択したタスクが完了したら、Pull Request を作成する
  - Pull Request 作成には `gh` コマンドを利用することができる
  ```
  # 改行を含む本文を正しく処理するには、--body オプションに直接文字列を渡す（\n ではなく実際の改行を使用）
  gh pr create --repo https://github.com/urugus/shiritoruby --title "今回の変更の概要" --body "## 変更の概要

  - 変更点1
  - 変更点2

  ## 詳細

  詳細な説明"

  # または、本文をファイルから読み込む方法も利用可能
  # echo "## 変更の概要\n\n- 変更点1\n- 変更点2" > pr_body.txt
  # gh pr create --repo https://github.com/urugus/shiritoruby --title "今回の変更の概要" --body-file pr_body.txt
  ```
  - Pull Request には以下の内容を含めること
    - タイトル: 今回の変更の概要
    - 本文:
      - 変更の概要
- Pull Request を作成するところまでできたら、今回のタスクを完了とし、ユーザーに次の指示を仰ぐ

# 実装のために必要な情報

- docs/*.md に情報をまとめているため、必要になったタイミングで参照する
- 上記を参照しても不明な場合は勝手に補おうとせず、ユーザーに仕様を確認する
- ユーザーに確認したことによって発覚した新情報はドキュメントに反映すること
